// <auto-generated />
using System;
using AccesoDatos.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AccesoDatos.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AccesoDatos.Model.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DocumentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EtiquetaId")
                        .HasColumnType("integer");

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("EtiquetaId");

                    b.ToTable("CitaSet");
                });

            modelBuilder.Entity("AccesoDatos.Model.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Extension")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("NubeId")
                        .HasColumnType("integer");

                    b.Property<int?>("NubeId1")
                        .HasColumnType("integer");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("integer");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NubeId1");

                    b.HasIndex("ProyectoId");

                    b.ToTable("DocumentoSet");
                });

            modelBuilder.Entity("AccesoDatos.Model.Etiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("NumCitas")
                        .HasColumnType("integer");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("EtiquetaSet");
                });

            modelBuilder.Entity("AccesoDatos.Model.Nube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DocumentoId")
                        .HasColumnType("integer");

                    b.Property<int>("ExtensionFragmento")
                        .HasColumnType("integer");

                    b.Property<int>("NumConceptos")
                        .HasColumnType("integer");

                    b.Property<int>("NumDocumentos")
                        .HasColumnType("integer");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("NubeSet");
                });

            modelBuilder.Entity("AccesoDatos.Model.Palabra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("NubeId")
                        .HasColumnType("integer");

                    b.Property<int>("NumApariciones")
                        .HasColumnType("integer");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NubeId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("PalabraSet");
                });

            modelBuilder.Entity("AccesoDatos.Model.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreDocActivo")
                        .HasColumnType("text");

                    b.Property<int?>("NumDocumentos")
                        .HasColumnType("integer");

                    b.Property<int?>("NumEtiquetas")
                        .HasColumnType("integer");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("ProyectoSet");
                });

            modelBuilder.Entity("AccesoDatos.Model.Cita", b =>
                {
                    b.HasOne("AccesoDatos.Model.Documento", "Documento")
                        .WithMany("Citas")
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccesoDatos.Model.Etiqueta", "Etiqueta")
                        .WithMany("Citas")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccesoDatos.Model.Documento", b =>
                {
                    b.HasOne("AccesoDatos.Model.Nube", "Nube")
                        .WithMany()
                        .HasForeignKey("NubeId1");

                    b.HasOne("AccesoDatos.Model.Proyecto", "Proyecto")
                        .WithMany("Documentos")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccesoDatos.Model.Etiqueta", b =>
                {
                    b.HasOne("AccesoDatos.Model.Proyecto", "Proyecto")
                        .WithMany("Etiquetas")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccesoDatos.Model.Nube", b =>
                {
                    b.HasOne("AccesoDatos.Model.Proyecto", "Proyecto")
                        .WithMany("Nubes")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccesoDatos.Model.Palabra", b =>
                {
                    b.HasOne("AccesoDatos.Model.Nube", "Nube")
                        .WithMany("Palabras")
                        .HasForeignKey("NubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccesoDatos.Model.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
